;; Object c-project/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "c-project/"
  :tables
  (list
    (semanticdb-table "makefile"
      :major-mode 'makefile-bsdmake-mode
      :tags 
        '( ("PR" variable (:default-value ("__PROJECT-NAME__")) nil [138 160])
            ("SHELL" variable (:default-value ("/bin/bash")) nil [160 178])
            ("OBJECTS" variable nil nil [178 188])
            ("LIBS" variable (:default-value ("glib-2.0")) nil [188 204])
            ("DFLAGS" variable (:default-value ("-g")) nil [204 216])
            ("TSTDIR" variable (:default-value ("tst/")) nil [216 230])
            ("SRCDIR" variable (:default-value ("src/")) nil [230 244])
            ("DOCDIR" variable (:default-value ("doc/")) nil [244 258])
            ("CFLAGS" variable (:default-value ("-pedantic-errors" "${DFLAGS}" "-Wall" "-std=gnu99" "${OPT}" "-I${SRCDIR}" "`pkg-config --cflags --libs ${LIBS}`")) nil [258 367])
            ("OPT" variable (:default-value ("-O0")) nil [367 377])
            ("CC" variable (:default-value ("gcc")) nil [377 386])
            (".PHONY" function (:arguments ("doc" "all" "clean" "help")) nil [387 414])
            ("all" function (:arguments ("${PR}" "test")) nil [482 498])
            ("${PR}" function (:arguments ("${SRCDIR}*.c")) nil [542 588])
            ("test" function (:arguments ("$(patsubst %.c,%.log,$(wildcard ${TSTDIR}*.c))")) nil [642 695])
            ("${TSTDIR}" function (:arguments ("${TSTDIR}%.c")) nil [696 751])
            ("${TSTDIR}" function (:arguments ("${TSTDIR}%.out")) nil [752 823])
            ("doc" function nil nil [884 916])
            ("dist" function nil nil [977 1049])
            ("help" function nil nil [1094 1189])
            ("clean" function nil nil [1244 1395]))          
      :file "makefile"
      :pointmax 1395
      :fsize 1394
      :lastmodtime '(22485 28225 0 0)
      :unmatched-syntax nil))
  :file "!Users!pig30n!.emacs.d!templates!c-project!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
